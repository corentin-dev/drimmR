% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dmmsum.R
\name{dmmsum}
\alias{dmmsum}
\title{Point by point estimates of a k-th order Drifting Markov Model}
\usage{
dmmsum(
  sequences,
  order,
  degree,
  states,
  init.estim = c("mle", "freq", "prod", "stat.law", "unif")
)
}
\arguments{
\item{sequences}{A list of character vector(s) representing one (several) sequence(s)}

\item{order}{Order of the Markov chain}

\item{degree}{Degree of the polynomials (e.g., linear drifting if degree=1, etc.)}

\item{states}{Vector of states space of length s > 1}

\item{init.estim}{Default="mle". Method used to estimate the initial law.
If init.estim = "mle", then the classical Maximum Likelihood Estimator
is used, if init.estim = "freq", then, the initial distribution `init`
is estimated by taking the frequences of the words of length `k` for all
sequences. If init.estim = "prod", then, `init` is estimated by using
the product of the frequences of each letter (for all the sequences) in
the word of length `k`. If init.estim = "stat.law", then `init` is
estimated by using the stationary law of the point of support transition
matrices of each letter. See Details for the formulas. If init.estim = "unif",
then, `init` of each letter is estimated by using \eqn{\frac{1}{s}}}

\item{model.length}{Model size}
}
\value{
An object of class [dmm], [dmmsum].
}
\description{
Estimation of d+1 points of support transition matrices and |A|^{k} initial law of a k-th
  order Drifting Markov Model starting from one or several sequences.
}
\details{
The initial distribution of a a k-th order Drifting Markov Model is defined as
 \eqn{\mu_i = P(X_1 = i)}. Three methods are proposed for the estimation
 of the latter :
 \describe{
   \item{Estimation based on the Maximum Likelihood Estimator:}{
     The Maximum Likelihood Estimator for the initial distribution. The
     formula is: \eqn{\widehat{\mu_i} = \frac{Nstart_i}{L}}, where
     \eqn{Nstart_i} is the number of occurences of the word \eqn{i} (of
     length \eqn{k}) at the beginning of each sequence and \eqn{L} is the
     number of sequences. This estimator is reliable when the number of
     sequences \eqn{L} is high.}
   \item{Estimation based on the frequency:}{The initial distribution is
     estimated by taking the frequences of the words of length `k` for all
     sequences. The formula is \eqn{\widehat{\mu_i} = \frac{N_i}{N}}, where
     \eqn{N_i} is the number of occurences of the word \eqn{i} (of length \eqn{k})
     in the sequences and \eqn{N} is the sum of the lengths of the sequences.}
   \item{Estimation based on the product of the frequences of each state:}{
     The initial distribution is estimated by using the product of the
     frequences of each state (for all the sequences) in the word of length
     \eqn{k}.}
      \item{Estimation based on the stationary law of point of support
      transition matrix for a word of length k:
     The initial distribution is estimated using \eqn{\mu(\Pi_{\frac{k-1}{n}}
     }}
 }
}
\examples{
data(lambda, package = "drimmR")
states <- c("a","c","g","t")
order <- 1
degree <- 1
dmmsum(lambda,order,degree,states, init.estim = "freq")
}
\references{

}
\author{
Geoffray Brelurut, Alexandre Seiller
}
