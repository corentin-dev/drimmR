% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metrics.R
\name{errorRate}
\alias{errorRate}
\title{Compute error rates}
\usage{
errorRate(
  x,
  k1,
  k2,
  s1,
  error.rate = c("BMP", "RG"),
  output_file = NULL,
  plot = FALSE
)
}
\arguments{
\item{x}{An object of class "dmm"}

\item{k1}{A numeric, start position}

\item{k2}{A numeric, end position}

\item{s1}{Character vector of the subspace working states among the state space vector s.t. s1<|s|}

\item{error.rate}{Default="BMP". Method used to estimate the error rate. If error.rate= "BMP",
 then, `error.rate` is estimated as follows \eqn{\forall l-1 \neq 0 , \ \lambda (l) = 1- \frac{\mu_0^U \ \prod_{t=1}^{l}( \ (1-\frac{t}{n}) \pi_0^{UU} + (\frac{t}{n}) \pi_1^{UU})
\mathbb{1}^U}{\mu_0^U \ \prod_{t=1}^{l-1}( \ (1-\frac{t}{n}) \pi_0^{UU} + (\frac{t}{n}) \pi_1^{UU}) \ \mathbb{1}^U}} and \lambda (l)=0 otherwise. If error.rate= "RG then, `error.rate` is estimated as follows
\eqn{\forall \ l \ge \ 1 \ , r(l)=-\ln \frac{\mu_0^U \ \prod_{t=1}^{l}( \ (1-\frac{t}{n}) \pi_0^{UU} + (\frac{t}{n}) \pi_1^{UU}) \ \mathbb{1}^U}{\mu_0^U \ \prod_{t=1}^{l-1}( \ (1-\frac{t}{n}) \pi_0^{UU} + (\frac{t}{n}) \pi_1^{UU}) \ \mathbb{1}^U}} and r(l)=-\ln R(0) if l=0.}

\item{output_file}{A file containing matrix of error rates at each position}
}
\value{
A matrix with error rate score at each position
}
\description{
Compute error rates
}
\examples{
data(lambda, package = "drimmR")
dmm <- dmmsum(lambda,1,1,c("a","c","g","t"))
k1 <- 1
k2 <- 200
s1 <- c("c","t")  # vector of working states
ER.out <- "C:\\\\...\\\\file.txt"
errorRate(dmm,k1,k2,s1, error.rate="BMP",output_file=ER.out,plot=FALSE)

}
\author{
Alexandre Seiller
}
